#1  Provide the list of markets in which customer "Atliq Exclusive" operates its business in the APAC region.

SELECT market
FROM dim_customer
WHERE customer= 'Atliq Exclusive' AND region= 'APAC'
GROUP BY market;


#2  What is the percentage of unique product increase in 2021 vs. 2020?

SELECT
    A.unq_20 AS unique_products_2020,
    B.unq_21 AS unique_products_2021,
    ROUND((B.unq_21 - A.unq_20) * 100.0 / A.unq_20, 2) AS pct_change
FROM 
    (SELECT COUNT(DISTINCT product_code) AS unq_20
    FROM fact_sales_monthly
    WHERE fiscal_year = 2020) A
JOIN
    (SELECT COUNT(DISTINCT product_code) AS unq_21
    FROM fact_sales_monthly
    WHERE fiscal_year = 2021) B
ON A.unq_20 IS NOT NULL AND B.unq_21 IS NOT NULL;


#3  Provide a report with all the unique product counts for each segment and sort them in descending order of product counts.

SELECT
segment,
COUNT(product) as product_count
FROM dim_product
GROUP BY segment
ORDER BY product_count DESC;


#4  Follow-up: Which segment had the most increase in unique products in 2021 vs 2020?

WITH cte1 AS 
(SELECT
segment as s1,
COUNT(DISTINCT(s.product_code)) AS cnt1
FROM dim_product p JOIN fact_sales_monthly s
ON p.product_code=s.product_code where
s.fiscal_year='2021' GROUP BY p.segment),

cte2 AS
(SELECT
 segment AS s2,
 COUNT(DISTINCT s.product_code) AS cnt2
 FROM dim_product p
 JOIN
 fact_sales_monthly s ON p.product_code = s.product_code
 WHERE s.fiscal_year = '2021'
 GROUP BY p.segment
)

SELECT
cte1.s1 AS segment,
cte1.cnt1 AS product_count_2020,
cte2.cnt2 AS product_count_2021,
(cte2.cnt2-cte1.cnt1) AS difference
FROM cte1 JOIN cte2
ON cte1.s1=cte2.s2;


#5  Get the products that have the highest and lowest manufacturing costs.

(SELECT TOP 1
m.product_code,
p.product,
m.manufacturing_cost
FROM fact_manufacturing_cost m JOIN dim_product p
ON m.product_code=p.product_code
ORDER BY m.manufacturing_cost DESC) -- Highest cost product
UNION
(SELECT TOP 1
m.product_code,
p.product,
m.manufacturing_cost
FROM fact_manufacturing_cost m JOIN dim_product p
ON m.product_code=p.product_code
ORDER BY m.manufacturing_cost ASC) -- Lowest cost product;


#6  Generate a report which contains the top 5 customers who received an average high pre_invoice_discount_pct for the fiscal year 2021 and in the
Indian market.

SELECT TOP 5
pr.customer_code, c.customer,
pr.pre_invoice_discount_pct AS average_discount_percentage
FROM fact_pre_invoice_deductions pr
JOIN dim_customer c
ON pr.customer_code=c.customer_code
WHERE pre_invoice_discount_pct > (SELECT AVG(pre_invoice_discount_pct) FROM fact_pre_invoice_deductions)
AND c.market='India'AND pr.fiscal_year='2021'
ORDER BY average_discount_percentage DESC;


#7  Get the complete report of the Gross sales amount for the customer “Atliq Exclusive” for each month . This analysis helps to get an idea of low and
high-performing months and take strategic decisions.

SELECT
CONCAT(DATENAME(MONTH,s.date), ' (', YEAR(s.date), ')') AS month,
s.fiscal_year,
ROUND(SUM(s.sold_quantity*g.gross_price*1.0),2) as gross_sales_amount
FROM fact_sales_monthly s
JOIN fact_gross_price g
ON s.product_code=g.product_code
JOIN dim_customer c
ON s.customer_code=c.customer_code
WHERE c.customer='Atliq Exclusive'
GROUP BY CONCAT(DATENAME(MONTH,s.date), ' (', YEAR(s.date), ')'), s.fiscal_year
ORDER BY s.fiscal_year;


#8  In which quarter of 2020, got the maximum total_sold_quantity?

SELECT
CASE
    WHEN [date] BETWEEN '2019-09-01' AND '2019-11-01' THEN 'Q1'
    WHEN [date] BETWEEN '2019-12-01' AND '2020-02-01' THEN 'Q2'
    WHEN [date] BETWEEN '2020-03-01' AND '2020-05-01' THEN 'Q3'
    WHEN [date] BETWEEN '2020-06-01' AND '2020-08-01' THEN 'Q4'
END AS quarters,
ROUND(SUM(sold_quantity*1.0)/1000000, 2) AS total_sold_quantity_in_mln
FROM fact_sales_monthly
WHERE fiscal_year = 2020
GROUP BY
    CASE
        WHEN [date] BETWEEN '2019-09-01' AND '2019-11-01' THEN 'Q1'
        WHEN [date] BETWEEN '2019-12-01' AND '2020-02-01' THEN 'Q2'
        WHEN [date] BETWEEN '2020-03-01' AND '2020-05-01' THEN 'Q3'
        WHEN [date] BETWEEN '2020-06-01' AND '2020-08-01' THEN 'Q4'
    END
ORDER BY
    total_sold_quantity_in_mln DESC;


#9  Which channel helped to bring more gross sales in the fiscal year 2021 and the percentage of contribution?

WITH cte1 AS (
SELECT c.channel, SUM(s.sold_quantity*g.gross_price) AS total_sales
FROM fact_sales_monthly s
JOIN dim_customer c ON s.customer_code=c.customer_code
JOIN fact_gross_price g ON s.product_code=g.product_code
WHERE s.fiscal_year=2021
GROUP BY c.channel
ORDER BY total_sales DESC)

SELECT channel, ROUND(total_sales*1.0/1000000,2) AS gross_sales_in_mln,
ROUND(total_sales*100.0/(SUM(total_sales) over()),2) AS percentage
FROM cte1;


#10  Get the Top 3 products in each division that have a high total_sold_quantity in the fiscal_year 2021?

WITH cte1 AS (
SELECT
p.division, s.product_code, p.product,
SUM(s.sold_quantity) as total_sold_quantity
FROM fact_sales_monthly s
JOIN dim_product P ON s.product_code=p.product_code
WHERE s.fiscal_year = 2021 
GROUP BY p.division, s.product_code, P.product),

cte2 AS (
SELECT division, product_code, product, total_sold_quantity,
DENSE_RANK() OVER(PARTITION BY division ORDER BY total_sold_quantity DESC) AS 'rank_order'
FROM cte1)

SELECT cte1.division, cte1.product_code, cte1.product, cte2.total_sold_quantity, cte2.rank_order
FROM cte1 JOIN cte2 ON cte1.product_code=cte2.product_code
WHERE cte2.rank_order IN (1,2,3);


